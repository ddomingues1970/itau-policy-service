# docker-compose.yml
services:
  postgres:
    image: postgres:16
    container_name: itau-postgres
    environment:
      POSTGRES_USER: itau
      POSTGRES_PASSWORD: itau
      POSTGRES_DB: policydb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U itau -d policydb" ]
      interval: 5s
      timeout: 3s
      retries: 20

  rabbitmq:
    image: rabbitmq:3-management
    container_name: itau-rabbit
    ports:
      - "5672:5672"
      - "15672:15672" # UI http://localhost:15672 guest/guest
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 20

  wiremock:
    image: wiremock/wiremock:3.9.1
    container_name: itau-wiremock
    command: [ "--verbose", "--port", "8081", "--root-dir", "/home/wiremock", "--global-response-templating" ]
    ports:
      - "8081:8081"
    volumes:
      - ./infra/wiremock:/home/wiremock:ro
    healthcheck:
      test: [ "CMD-SHELL", "wget -qO- http://localhost:8081/__admin | grep -q mappings" ]
      interval: 5s
      timeout: 3s
      retries: 20

  policy-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: itau-policy-service
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/policydb
      SPRING_DATASOURCE_USERNAME: itau
      SPRING_DATASOURCE_PASSWORD: itau
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      FRAUD_API_BASE_URL: http://wiremock:8081
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      wiremock:
        condition: service_healthy

volumes:
  pgdata:
