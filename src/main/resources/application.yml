server:
  port: 8080

spring:
  application:
    name: policy-service
  datasource:
    url: jdbc:postgresql://localhost:5432/policydb
    username: itau
    password: itau
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate.format_sql: true
      hibernate.jdbc.time_zone: UTC
    open-in-view: false
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    listener:
      simple:
        auto-startup: false

fraud:
  api:
    base-url: http://localhost:8081
    connect-timeout: 2s
    read-timeout: 5s

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when_authorized
  info:
    java:
      enabled: true

# Logs estruturados (logfmt/JSON-like) no console, sem libs extras
logging:
  level:
    root: INFO
    br.com.danieldomingues.itau.policy: INFO
  pattern:
    console: >-
      ts=%d{ISO_OFFSET_DATE_TIME} level=%p logger=%logger{36} thread=%thread msg="%m"
      traceId=%X{traceId:-} spanId=%X{spanId:-}%n

amqp:
  exchanges:
    policy: policy.exchange
  queues:
    payment: policy.payment.q
    subscription: policy.subscription.q
    events:
      approved: policy.approved.q
      rejected: policy.rejected.q
  routing:
    payment: policy.payment
    subscription: policy.subscription
    approved: policy.approved
    rejected: policy.rejected
